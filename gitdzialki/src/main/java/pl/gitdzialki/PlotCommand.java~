package pl.gitdzialki;

import com.sk89q.worldedit.bukkit.BukkitAdapter;
import com.sk89q.worldedit.math.BlockVector3;
import com.sk89q.worldguard.WorldGuard;
import com.sk89q.worldguard.protection.managers.RegionManager;
import com.sk89q.worldguard.protection.regions.ProtectedCuboidRegion;
import com.sk89q.worldguard.protection.regions.ProtectedRegion;
import org.bukkit.ChatColor;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.block.Block;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockBreakEvent;
import org.bukkit.event.block.BlockPlaceEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.BlockStateMeta;

public class PlotCommand implements CommandExecutor, Listener {
    private final Main plugin;
    private static final String PLOT_PREFIX = "dzialka_";

    public PlotCommand(Main plugin) {
        this.plugin = plugin;
    }

    @Override
    public boolean onCommand(CommandSender sender, Command cmd, String label, String[] args) {
        if (!(sender instanceof Player player)) {
            sender.sendMessage("Tylko gracze!");
            return true;
        }

        if (cmd.getName().equalsIgnoreCase("blokdzialki")) {
            givePlotBlock(player);
            return true;
        } else if (cmd.getName().equalsIgnoreCase("dzialkadom")) {
            teleportToPlot(player);  // Bez sprawdzania argumentów
            return true;
        }

        return false;
    }

    private void givePlotBlock(Player player) {
        ItemStack shulker = new ItemStack(Material.RED_SHULKER_BOX);
        BlockStateMeta meta = (BlockStateMeta) shulker.getItemMeta();
        meta.setDisplayName(ChatColor.RED + "Serce Działki");
        shulker.setItemMeta(meta);
        player.getInventory().addItem(shulker);
    }

    @EventHandler
    public void onBlockPlace(BlockPlaceEvent event) {
        Block block = event.getBlock();
        if (block.getType()!= Material.RED_SHULKER_BOX) return;

        BlockStateMeta meta = (BlockStateMeta) event.getItemInHand().getItemMeta();
        if (meta == null ||!meta.getDisplayName().equals(ChatColor.RED + "Serce Działki")) return;

        Player player = event.getPlayer();
        if (hasPlot(player)) {
            event.setCancelled(true);
            player.sendMessage(ChatColor.RED + "Możesz mieć tylko jedną działkę!");
            return;
        }

        createPlot(player, block.getLocation());
    }

    @EventHandler
    public void onBlockBreak(BlockBreakEvent event) {
        Block block = event.getBlock();
        if (block.getType()!= Material.RED_SHULKER_BOX) return;

        Player player = event.getPlayer();
        ProtectedRegion region = getPlotAtLocation(block.getLocation());

        if (region == null ||!isPlotOwner(player, region)) {
            event.setCancelled(true);
            return;
        }

        deletePlot(region, block.getLocation().getWorld());
        player.sendMessage(ChatColor.RED + "Działka usunięta!");
    }

    private boolean isPlotBlock(BlockStateMeta meta) {
        return meta!= null && meta.getDisplayName().equals(ChatColor.RED + "Serce Działki");
    }

    private boolean hasPlot(Player player) {
        RegionManager rm = getRegionManager(player.getWorld());
        return rm!= null && rm.hasRegion(PLOT_PREFIX + player.getName());
    }

    private void createPlot(Player player, Location loc) {
        RegionManager rm = getRegionManager(loc.getWorld());
        if (rm == null) return;

        String regionId = PLOT_PREFIX + player.getName();
        BlockVector3 center = BukkitAdapter.asBlockVector(loc);

        ProtectedCuboidRegion region = new ProtectedCuboidRegion(
                regionId,
                center.subtract(8, 0, 8),
                center.add(8, 256, 8)
        );

        region.getOwners().addPlayer(player.getUniqueId());
        rm.addRegion(region);
        player.sendMessage(ChatColor.GREEN + "Działka stworzona! (17x17)");
    }

    private void deletePlot(ProtectedRegion region, org.bukkit.World world) {
        RegionManager rm = getRegionManager(world);
        if (rm!= null) {
            rm.removeRegion(region.getId());
        }
    }

    private ProtectedRegion getPlotAtLocation(Location loc) {
        return WorldGuard.getInstance().getPlatform().getRegionContainer().createQuery()
                .getApplicableRegions(BukkitAdapter.adapt(loc))
                .getRegions().stream()
                .filter(r -> r.getId().startsWith(PLOT_PREFIX))
                .findFirst()
                .orElse(null);
    }

    private boolean isPlotOwner(Player player, ProtectedRegion region) {
        return region.getOwners().contains(player.getUniqueId());
    }

    private RegionManager getRegionManager(org.bukkit.World world) {
        return WorldGuard.getInstance().getPlatform().getRegionContainer().get(BukkitAdapter.adapt(world));
    }

    private void teleportToPlot(Player player) {
        ProtectedRegion region = getPlotRegion(player);
        if (region == null) {
            player.sendMessage(ChatColor.RED + "Nie posiadasz działki!");
            return;
        }

        BlockVector3 center = region.getMinimumPoint().add(region.getMaximumPoint()).divide(2);
        Location teleportLocation = BukkitAdapter.adapt(region.getWorld(), center);
        teleportLocation.setY(teleportLocation.getY() + 1);

        player.teleport(teleportLocation);
        player.sendMessage(ChatColor.GREEN + "Teleportowano na działkę!");
    }

    private ProtectedRegion getPlotRegion(Player player) {
        RegionManager rm = getRegionManager(player.getWorld());
        if (rm == null) return null;
        return rm.getRegion(PLOT_PREFIX + player.getName());
    }
}